import { el } from './domUtils.js';
import { state } from './state.js';
import * as C from './config.js';

export function log(msg, type = 'default') {
    el.actionLogOutput.textContent = msg;
    el.actionLogOutput.className = 'log-default'; // Reset class
    if (type === 'money-gain') el.actionLogOutput.classList.add('log-money-gain');
    else if (type === 'money-loss') el.actionLogOutput.classList.add('log-money-loss');
    else if (type === 'hormone-change') el.actionLogOutput.classList.add('log-hormone-change');
    else if (type === 'progress-change') el.actionLogOutput.classList.add('log-progress-change');
    else if (type === 'discovery') el.actionLogOutput.classList.add('log-discovery');
    else if (type === 'important') el.actionLogOutput.classList.add('log-important');
}

export function updateTabsVisibility() {
    let tabSwitched = false;
    el.tabs.forEach(btn => {
        if (btn.dataset.tab === 'hormone') {
            const isHormoneTabVisible = state.hormonesUnlocked;
            btn.style.display = isHormoneTabVisible ? '' : 'none';

            if (!isHormoneTabVisible && state.tab === 'hormone') {
                state.tab = 'income';
                tabSwitched = true; // –§–ª–∞–≥, —á—Ç–æ —Ç–∞–± –±—ã–ª –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω
            }
        }
    });
    // –ï—Å–ª–∏ —Ç–∞–± –±—ã–ª –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω, –æ–±–Ω–æ–≤–∏—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ
    if (tabSwitched) {
        el.tabs.forEach(tb => tb.classList.toggle('selected', tb.dataset.tab === state.tab));
    }
}

export function updateProgressDisplay() {
    if (!state.hormonesUnlocked) {
        el.progressTitle.textContent = "–û—Ç–∫—Ä—ã—Ç–∏—è";
        el.progressIcon.textContent = "üí°";
        el.prog.textContent = state.discoveryPoints;
        el.pbar.style.width = (state.discoveryPoints / C.MAX_DISCOVERY_POINTS * 100) + '%';
    } else {
        el.progressTitle.textContent = "–ü—Ä–æ–≥—Ä–µ—Å—Å";
        el.progressIcon.textContent = "üìà";
        el.prog.textContent = state.progress + '%';
        el.pbar.style.width = (state.progress / C.MAX_PROGRESS * 100) + '%';
    }
}

export function updateBody() {
    const T = state.emaT, E = state.emaE, P = state.hormonesUnlocked ? state.progress : 0;
    const T_is_dominant = T > E + 10;
    const E_is_dominant = E > T + 5;
    const hormonalBalanceFactor = Math.max(0, Math.min(100, (E - T + C.MAX_HORMONE_LEVEL) / 2));

    let lines = [];
    if (!state.hormonesUnlocked) {
        lines.push("–¢—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–µ–±—è –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä. –ö–∞–∫–∏–µ-—Ç–æ —Å–º—É—Ç–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è –∏ –º—ã—Å–ª–∏ –∏–Ω–æ–≥–¥–∞ –ø–æ—Å–µ—â–∞—é—Ç —Ç–µ–±—è, –Ω–æ –ø–æ–∫–∞ –Ω–µ—è—Å–Ω–æ, –∫ —á–µ–º—É –æ–Ω–∏ –≤–µ–¥—É—Ç.");
        lines.push(`–¢–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –æ—â—É—â–µ–Ω–∏—è: ${state.discoveryPoints > 15 ? "–õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ —Ä–∞—Å—Ç–µ—Ç, —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å –≤—Å–µ –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏." : "–û–±—ã—á–Ω—ã–π –¥–µ–Ω—å, –æ–±—ã—á–Ω—ã–µ –º—ã—Å–ª–∏."}`);
        if (state.discoveryPoints > 0 && state.discoveryPoints < C.DISCOVERY_POINTS_TO_UNLOCK_HORMONES) {
             lines.push(`–û—á–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏–π: ${state.discoveryPoints}/${C.DISCOVERY_POINTS_TO_UNLOCK_HORMONES}`);
        } else if (state.discoveryPoints >= C.DISCOVERY_POINTS_TO_UNLOCK_HORMONES) {
             lines.push(`–ö–∞–∂–µ—Ç—Å—è, —Ç—ã –Ω–∞ –ø–æ—Ä–æ–≥–µ –≤–∞–∂–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è! (–û—á–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏–π: ${state.discoveryPoints})`);
        }
    } else {
        // –ì–æ–ª–æ—Å
        let voicePitch = C.VOICE_PITCH_BASE_HZ - (T - E) * C.VOICE_PITCH_HORMONE_FACTOR;
        voicePitch = Math.max(80, Math.min(300, voicePitch));
        let voiceDesc = `üé§ –ì–æ–ª–æ—Å: ${voicePitch.toFixed(0)} –ì—Ü. `;
        if (E - T > C.VOICE_E_DOMINANT_THRESHOLD_FOR_CHANGE_2 && P > C.VOICE_P_THRESHOLD_FOR_CHANGE_2) voiceDesc += "–ó–≤—É—á–∏—Ç –∑–∞–º–µ—Ç–Ω–æ –≤—ã—à–µ, –Ω–µ–∂–Ω–µ–µ, –ø–æ—á—Ç–∏ –Ω–µ—É–∑–Ω–∞–≤–∞–µ–º–æ.";
        else if (E - T > C.VOICE_E_DOMINANT_THRESHOLD_FOR_CHANGE_1) voiceDesc += "–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º—è–≥—á–µ –∏ –≤—ã—à–µ, —Ç–µ—Ä—è–µ—Ç –≥—Ä—É–±—ã–µ –Ω–æ—Ç–∫–∏.";
        else if (T - E > C.VOICE_T_DOMINANT_THRESHOLD) voiceDesc += "–ù–∏–∑–∫–∏–π, —Å –±–∞—Ä—Ö–∞—Ç–Ω—ã–º–∏ –º—É–∂—Å–∫–∏–º–∏ –æ–±–µ—Ä—Ç–æ–Ω–∞–º–∏.";
        else voiceDesc += "–¢–µ–º–±—Ä –Ω–∞ –≥—Ä–∞–Ω–∏, –∞–Ω–¥—Ä–æ–≥–∏–Ω–Ω—ã–π, –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–π.";
        lines.push(voiceDesc);
        // –ö–æ–∂–∞
        let skinDesc = "üíß –ö–æ–∂–∞: ";
        if (E_is_dominant && E > C.SKIN_E_DOMINANT_THRESHOLD_FOR_SOFTNESS) {
            skinDesc += P > C.SKIN_P_THRESHOLD_SOFT_2 ? "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –≥–ª–∞–¥–∫–∞—è, —à–µ–ª–∫–æ–≤–∏—Å—Ç–∞—è –Ω–∞ –æ—â—É–ø—å, –ø–æ—Ä—ã –ø–æ—á—Ç–∏ –Ω–µ–≤–∏–¥–∏–º—ã. –õ—ë–≥–∫–∏–π —Ä—É–º—è–Ω–µ—Ü." :
                P > C.SKIN_P_THRESHOLD_SOFT_1 ? "–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—â—É—Ç–∏–º–æ –º—è–≥—á–µ, –Ω–µ–∂–Ω–µ–µ, —É—Ö–æ–¥–∏—Ç –∂–∏—Ä–Ω—ã–π –±–ª–µ—Å–∫." :
                "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –º—è–≥–∫–æ—Å—Ç—å, –º–µ–Ω–µ–µ –∂–∏—Ä–Ω–∞—è.";
            if (E > C.SKIN_E_THRESHOLD_FOR_THINNING && P > C.SKIN_P_THRESHOLD_FOR_THINNING) skinDesc += " –ö–∞–∂–µ—Ç—Å—è —Ç–æ–Ω—å—à–µ, –≤–µ–Ω–∫–∏ –Ω–∞ –∑–∞–ø—è—Å—Ç—å—è—Ö –∏ –≥—Ä—É–¥–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–∏–¥–Ω—ã –æ—Ç—á–µ—Ç–ª–∏–≤–µ–µ.";
        } else if (T_is_dominant && T > C.SKIN_T_DOMINANT_THRESHOLD_FOR_ROUGHNESS) {
            skinDesc += "–ü–ª–æ—Ç–Ω–∞—è, –≤–æ–∑–º–æ–∂–Ω–æ, –±–æ–ª–µ–µ —Å–∫–ª–æ–Ω–Ω–∞—è –∫ –∂–∏—Ä–Ω–æ—Å—Ç–∏ –∏ –∞–∫–Ω–µ. –ü–æ—Ä—ã –∑–∞–º–µ—Ç–Ω—ã.";
        } else {
            skinDesc += "–û–±—ã—á–Ω–∞—è, –Ω–æ —Ç—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –∑–∞–º–µ—á–∞—Ç—å —Ç–æ–Ω–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –µ—ë —Ç–µ–∫—Å—Ç—É—Ä–µ.";
        }
        lines.push(skinDesc);
        // –í–æ–ª–æ—Å—ã –Ω–∞ —Ç–µ–ª–µ/–ª–∏—Ü–µ
        let bodyHairDesc = "üåø –í–æ–ª–æ—Å—ã –Ω–∞ —Ç–µ–ª–µ/–ª–∏—Ü–µ: ";
        if (E_is_dominant && E > C.BODYHAIR_E_DOMINANT_THRESHOLD_FOR_REDUCTION && P > C.BODYHAIR_P_THRESHOLD_FOR_REDUCTION) {
            bodyHairDesc += "–†–æ—Å—Ç –≤–æ–ª–æ—Å –Ω–∞ —Ç–µ–ª–µ –∑–∞–º–µ–¥–ª–∏–ª—Å—è, –æ–Ω–∏ —Å—Ç–∞–ª–∏ —Ç–æ–Ω—å—à–µ –∏ —Å–≤–µ—Ç–ª–µ–µ. ";
            if (T < C.BODYHAIR_T_THRESHOLD_FOR_FACIAL_PUBESCENCE && P > C.BODYHAIR_P_THRESHOLD_FOR_FACIAL_PUBESCENCE) bodyHairDesc += "–©–µ—Ç–∏–Ω–∞ –Ω–∞ –ª–∏—Ü–µ –ø–æ—á—Ç–∏ –Ω–µ —Ä–∞—Å—Ç–µ—Ç, –∏–ª–∏ —Å—Ç–∞–ª–∞ –ø—É—à–∫–æ–≤–æ–π.";
            else if (T < C.BODYHAIR_T_THRESHOLD_FOR_FACIAL_SLOWDOWN) bodyHairDesc += "–†–æ—Å—Ç —â–µ—Ç–∏–Ω—ã –∑–∞–º–µ–¥–ª–µ–Ω, –±—Ä–∏—Ç—å—ë —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∂–µ.";
        } else if (T_is_dominant && T > C.BODYHAIR_T_DOMINANT_THRESHOLD_FOR_THICK) {
            bodyHairDesc += "–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç –≤–æ–ª–æ—Å –Ω–∞ —Ç–µ–ª–µ –∏ –ª–∏—Ü–µ, –≥—É—Å—Ç–∞—è —â–µ—Ç–∏–Ω–∞.";
        } else {
            bodyHairDesc += "–ë–µ–∑ –æ—Å–æ–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.";
        }
        lines.push(bodyHairDesc);
        // –ì—Ä—É–¥—å
        let breastDesc = "üçà –ì—Ä—É–¥—å: ";
        let breastDevStageRaw = 0;
        if (E > C.BREAST_E_THRESHOLD_START_BUDDING && P > C.BREAST_P_THRESHOLD_START_BUDDING) {
            breastDevStageRaw = 1 + (Math.max(0, E - C.BREAST_E_THRESHOLD_START_BUDDING) / C.BREAST_E_UNITS_PER_STAGE) *
                (C.BREAST_PROGRESS_FACTOR_BASE + P / C.BREAST_PROGRESS_FACTOR_SCALE);
        }
        const currentBreastDevStage = Math.min(C.BREAST_MAX_DEV_STAGE, Math.floor(breastDevStageRaw));
        if (currentBreastDevStage === 0) breastDesc += "–ê–±—Å–æ–ª—é—Ç–Ω–æ –ø–ª–æ—Å–∫–∞—è.";
        else if (currentBreastDevStage === 1) breastDesc += `–ü–æ—è–≤–∏–ª–∏—Å—å –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–µ —É–ø–ª–æ—Ç–Ω–µ–Ω–∏—è –ø–æ–¥ —Å–æ—Å–∫–∞–º–∏ (E:${E.toFixed(0)}, P:${P}%).`;
        else if (currentBreastDevStage === 2) breastDesc += `–ù–µ–±–æ–ª—å—à–∞—è, –Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–∞—è (—Ä–∞–∑–º–µ—Ä A). –°–æ—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–ª–∏—Å—å. (E:${E.toFixed(0)}, P:${P}%).`;
        else if (currentBreastDevStage === 3) breastDesc += `–°—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞, —É–ø—Ä—É–≥–∞—è (–±–ª–∏–∂–µ –∫ B). (E:${E.toFixed(0)}, P:${P}%).`;
        else breastDesc += `–ü—ã—à–Ω–∞—è, –º—è–≥–∫–∞—è, —Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω–∞—è (—Ä–∞–∑–º–µ—Ä C+!). (E:${E.toFixed(0)}, P:${P}%).`;
        lines.push(breastDesc);
        // –§–∏–≥—É—Ä–∞ –∏ –ñ–∏—Ä
        let figureDesc = "üçë –§–∏–≥—É—Ä–∞: ";
        const whr_change_potential = C.FIGURE_WHR_BASE - C.FIGURE_WHR_TARGET_FEMALE;
        let whr_progress_to_female_target = 0;
        if (E_is_dominant && E > C.FIGURE_E_DOMINANT_THRESHOLD_FOR_WHR_CHANGE) {
            whr_progress_to_female_target = Math.min(1, (E - C.FIGURE_E_DOMINANT_THRESHOLD_FOR_WHR_CHANGE) / C.FIGURE_E_UNITS_FOR_WHR_PROGRESS) * (P / C.MAX_PROGRESS);
        }
        const current_whr = (C.FIGURE_WHR_BASE - whr_change_potential * whr_progress_to_female_target).toFixed(2);
        figureDesc += `–¢–∞–ª–∏—è/–±–µ–¥—Ä–∞: ${current_whr}. `;
        if (E_is_dominant && E > C.FIGURE_E_DOMINANT_THRESHOLD_FOR_FAT_REDISTRIBUTION && P > C.FIGURE_P_THRESHOLD_FOR_FAT_REDISTRIBUTION) {
            figureDesc += "–ñ–∏—Ä –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞ –±–µ–¥—Ä–∞ –∏ —è–≥–æ–¥–∏—Ü—ã. –¢–∞–ª–∏—è –∏–∑—è—â–Ω–µ–µ.";
        } else if (T_is_dominant && T > C.FIGURE_T_DOMINANT_THRESHOLD_FOR_MALE_FAT) {
            figureDesc += "–ñ–∏—Ä –≤ –æ–±–ª–∞—Å—Ç–∏ –∂–∏–≤–æ—Ç–∞, —Ñ–∏–≥—É—Ä–∞ –º–∞—Å–∫—É–ª–∏–Ω–Ω–∞—è.";
        } else if (P > C.FIGURE_P_THRESHOLD_FOR_SUBTLE_SOFTENING) {
            figureDesc += "–ö–æ–Ω—Ç—É—Ä—ã —Ç–µ–ª–∞ –Ω–µ—É–ª–æ–≤–∏–º–æ —Å–º—è–≥—á–∞—é—Ç—Å—è.";
        }
        lines.push(figureDesc);
        // –ú—ã—à—Ü—ã
        let muscleDesc = "üí™ –ú—ã—à—Ü—ã: ";
        if (T > C.MUSCLE_T_HIGH_THRESHOLD_FOR_BULK && !E_is_dominant) muscleDesc += P < C.MUSCLE_P_THRESHOLD_FOR_BULK_SOFTENING ? "–†–∞–∑–≤–∏—Ç—ã–µ, —Ä–µ–ª—å–µ—Ñ–Ω—ã–µ." : "–ö—Ä–µ–ø–∫–∏–µ, –Ω–æ —Ç–µ—Ä—è—é—Ç —Ç–≤–µ—Ä–¥–æ—Å—Ç—å.";
        else if (T > C.MUSCLE_T_MID_THRESHOLD_FOR_TONE && !E_is_dominant) muscleDesc += "–£–º–µ—Ä–µ–Ω–Ω–æ —Ä–∞–∑–≤–∏—Ç—ã, –≤ —Ç–æ–Ω—É—Å–µ.";
        else if (E_is_dominant && E > C.MUSCLE_E_DOMINANT_THRESHOLD_FOR_LOSS) muscleDesc += `–£–º–µ–Ω—å—à–∏–ª–∏—Å—å, —Å—Ç–∞–ª–∏ –º—è–≥—á–µ. –°–∏–ª–∞ —Å–Ω–∏–∑–∏–ª–∞—Å—å (T:${T.toFixed(0)}).`;
        else muscleDesc += `–°–ª–∞–±—ã–µ, –±–µ–∑ —Ä–µ–ª—å–µ—Ñ–∞. (T:${T.toFixed(0)})`;
        lines.push(muscleDesc);
        // –ì–µ–Ω–∏—Ç–∞–ª–∏–∏
        let penisShrinkageFactor = ((E - C.BASE_E) * C.GENITAL_PENIS_E_SHRINK_FACTOR + Math.max(0, 50 - T) * C.GENITAL_PENIS_LOW_T_SHRINK_FACTOR) *
            (C.GENITAL_PROGRESS_ACCELERATOR_BASE + P / C.GENITAL_PROGRESS_ACCELERATOR_SCALE);
        penisShrinkageFactor = Math.max(0, penisShrinkageFactor);
        const penisLengthCm = Math.max(C.GENITAL_PENIS_MIN_CM, C.GENITAL_PENIS_BASE_CM - penisShrinkageFactor).toFixed(1);
        let erectionQuality = '–Ω–æ—Ä–º–∞–ª—å–Ω–∞—è';
        if (T < C.GENITAL_ERECTION_T_LOW_THRESHOLD_ALMOST_NONE && E_is_dominant && P > C.GENITAL_ERECTION_P_LOW_THRESHOLD_ALMOST_NONE) erectionQuality = '–ø–æ—á—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
        else if (T < C.GENITAL_ERECTION_T_LOW_THRESHOLD_VERY_WEAK || (E_is_dominant && E > C.GENITAL_ERECTION_E_HIGH_THRESHOLD_VERY_WEAK)) erectionQuality = '–æ—á–µ–Ω—å —Å–ª–∞–±–∞—è';
        else if (T < C.GENITAL_ERECTION_T_LOW_THRESHOLD_WEAK || (E_is_dominant && E > C.GENITAL_ERECTION_E_HIGH_THRESHOLD_WEAK)) erectionQuality = '—Å–Ω–∏–∂–µ–Ω–∞, –º–µ–Ω–µ–µ —Ç–≤–µ—Ä–¥–∞—è';
        let penisDesc = `üçÜ –ö–ª–∏—Ç–∏/–ü–µ–Ω–∏—Å: ${penisLengthCm} —Å–º. `;
        if (P > C.GENITAL_P_THRESHOLD_FOR_CLIT_TEXT && E_is_dominant && parseFloat(penisLengthCm) < C.GENITAL_PENIS_CLIT_TRANSITION_CM) {
            penisDesc = `üéÄ –ö–ª–∏—Ç–æ—Ä: ${penisLengthCm} —Å–º. –°—Ç–∞–ª –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–º –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º. `;
        }
        penisDesc += `–≠—Ä–µ–∫—Ü–∏—è: ${erectionQuality}.`;
        lines.push(penisDesc);
        // –Ø–∏—á–∫–∏
        let testicleShrinkageFactor = ((E - C.BASE_E) * C.GENITAL_TESTICLES_E_SHRINK_FACTOR + Math.max(0, 40 - T) * C.GENITAL_TESTICLES_LOW_T_SHRINK_FACTOR) *
            (C.GENITAL_PROGRESS_ACCELERATOR_BASE + P / C.GENITAL_PROGRESS_ACCELERATOR_SCALE);
        testicleShrinkageFactor = Math.max(0, testicleShrinkageFactor);
        const testicleVolume = Math.max(C.GENITAL_TESTICLES_MIN_VOL_ML, C.GENITAL_TESTICLES_BASE_VOL_ML - testicleShrinkageFactor).toFixed(1);
        const testicleTexture = (E_is_dominant && E > C.GENITAL_TESTICLES_E_THRESHOLD_SOFT_TEXTURE && P > C.GENITAL_TESTICLES_P_THRESHOLD_SOFT_TEXTURE) ? '–º—è–≥–∫–∏–µ, —É–º–µ–Ω—å—à–∏–≤—à–∏–µ—Å—è' : '—É–ø—Ä—É–≥–∏–µ';
        let testiclesDesc = `ü•ö –Ø–∏—á–∫–∏: –æ–±—ä—ë–º ~${testicleVolume} –º–ª, ${testicleTexture}. `;
        if (E_is_dominant && E > C.GENITAL_TESTICLES_E_THRESHOLD_ATROPHY && P > C.GENITAL_TESTICLES_P_THRESHOLD_ATROPHY && parseFloat(testicleVolume) < C.GENITAL_TESTICLES_ATROPHY_VOL_ML) {
            testiclesDesc += "–ü–æ—á—Ç–∏ –∞—Ç—Ä–æ—Ñ–∏—Ä–æ–≤–∞–ª–∏—Å—å.";
        }
        lines.push(testiclesDesc);
        // –û—â—É—â–µ–Ω–∏—è –∏ –û–±—â–µ–µ
        let feelingDesc = "‚ú® –û—â—É—â–µ–Ω–∏—è: ";
        if (P > C.FEELING_P_THRESHOLD_PERFECT_SISSY && E_is_dominant && E > C.FEELING_E_THRESHOLD_PERFECT_SISSY) feelingDesc += "–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. –ì–∞—Ä–º–æ–Ω–∏—è.";
        else if (P > C.FEELING_P_THRESHOLD_REAL_SISSY && E_is_dominant) feelingDesc += "–ß—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–∏—Å—Å–∏. –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–∞—Å—Ç–µ—Ç.";
        else if (P > C.FEELING_P_THRESHOLD_TRANSFORMATION_FULL_SWING && (E_is_dominant || hormonalBalanceFactor > C.FEELING_HORMONAL_BALANCE_THRESHOLD_TRANSFORMATION_FULL_SWING)) feelingDesc += "–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–¥–µ—Ç –ø–æ–ª–Ω—ã–º —Ö–æ–¥–æ–º! –ü—Ä–∏–ª–∏–≤ —Å–∏—Å—Å–∏-—ç–Ω–µ—Ä–≥–∏–∏.";
        else if (P > C.FEELING_P_THRESHOLD_FIRST_WHISPERS) feelingDesc += "–ü–µ—Ä–≤—ã–µ —à–µ–ø–æ—Ç—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π. –¢–µ–ª–æ –º–µ–Ω—è–µ—Ç—Å—è, —ç—Ç–æ –≤–æ–ª–Ω—É–µ—Ç.";
        else feelingDesc += "–°–∞–º–æ–µ –Ω–∞—á–∞–ª–æ –ø—É—Ç–∏. –í–µ—Ç–µ—Ä–æ–∫ –ø–µ—Ä–µ–º–µ–Ω –µ–¥–≤–∞ –∫–æ—Å–Ω—É–ª—Å—è.";
        lines.push(feelingDesc);
    }
    el.bodyDesc.textContent = lines.join('\n\n');
}

export function renderChoices(actionsArray) {
    el.choices.innerHTML = '';
    actionsArray.filter(action => {
        if (action.tab === 'hormone' && !state.hormonesUnlocked) {
            return false;
        }
        return action.tab === state.tab;
    }).forEach(action => {
        if (action.displayCondition && !action.displayCondition()) {
            return;
        }

        const b = document.createElement('button');
        b.className = 'choice-button';

        let baseText = typeof action.text === 'function' ? action.text() : action.text;
        let currentText = '';
        let icon = '';

        // –ò–∫–æ–Ω–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –¥–µ–π—Å—Ç–≤–∏—è
        switch (action.id) {
            case 'work': icon = 'üíº '; break;
            case 't_blocker': icon = 'üíä '; break;
            case 't_pill': icon = '‚ôÇÔ∏è '; break;
            case 'e_pill': icon = '‚ôÄÔ∏è '; break;
            case 'read_book': icon = state.hormonesUnlocked ? 'üìñ ' : 'üìö '; break;
            case 'browse_internet': icon = 'üåê '; break; // –¢–µ–ø–µ—Ä—å —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–∫–æ–Ω–∫–∏
            case 'rest': icon = 'üò¥ '; break;
            // default: –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤—Å–µ actions –∏–º–µ—é—Ç ID
            // –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π case. –ï—Å–ª–∏ –Ω–µ—Ç, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –ª–æ–≥–∏–∫—É
            // –∏–ª–∏ –≤—ã–≤–æ–¥–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º action.id
        }

        currentText = icon + baseText; // –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∏ —Ç–µ–∫—Å—Ç–∞

        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —É "–ò—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é" –∏–∫–æ–Ω–∫–∞ –µ—Å—Ç—å, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –≤ action.text
        if (action.id === 'browse_internet' && !baseText.startsWith('üåê')) {
            currentText = 'üåê ' + baseText;
        } else {
            currentText = icon + baseText;
        }


        let isDisabled = false;
        if (action.cost > 0 && state.money < action.cost) {
            isDisabled = true;
            currentText += ` (–ù—É–∂–Ω–æ: ${action.cost}${C.CURRENCY_SYMBOL})`;
        } else if (action.cost > 0) {
            currentText += ` (‚Äì${action.cost}${C.CURRENCY_SYMBOL})`;
        } else if (action.id === 'work') {
            currentText += ` (+${C.WORK_INCOME}${C.CURRENCY_SYMBOL})`;
        }

        if (action.condition && !action.condition()) {
            isDisabled = true;
            if (action.id === 't_blocker' && state.t_blocker_active_days > 0) {
                currentText = `${icon}–ë–ª–æ–∫–∞—Ç–æ—Ä –¢ –∞–∫—Ç–∏–≤–µ–Ω (${state.t_blocker_active_days} –¥–Ω.)`;
            }
        }

        b.textContent = currentText;
        b.disabled = isDisabled;

        b.addEventListener('click', () => {
            action.handler();
        });
        el.choices.appendChild(b);
    });
}

export function updateStats(actionsArray) { // –ü—Ä–∏–Ω–∏–º–∞–µ—Ç actionsArray –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ renderChoices
    el.day.textContent = state.day;
    el.money.textContent = state.money + C.CURRENCY_SYMBOL;
    el.test.textContent = state.testosterone.toFixed(0);
    el.est.textContent = state.estrogen.toFixed(0);

    updateProgressDisplay();
    updateTabsVisibility(); // –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ –¥–æ renderChoices, –µ—Å–ª–∏ –æ–Ω–∞ –º–µ–Ω—è–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–±

    el.tbar.style.width = (state.testosterone / C.MAX_HORMONE_LEVEL * 100) + '%';
    el.ebar.style.width = (state.estrogen / C.MAX_HORMONE_LEVEL * 100) + '%';

    updateBody(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–ª–∞ –≤—Å–µ–≥–¥–∞, –∫–æ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Å—Ç–∞—Ç—ã
    renderChoices(actionsArray); // –ü–µ—Ä–µ–¥–∞–µ–º actionsArray
}